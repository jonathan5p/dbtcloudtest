version: 0.2
env:
  shell: bash
  variables:
    TERRAFORM_DOWNLOAD_URL: https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
  parameter-store:
    SSH_KEY: '/secure/aue1/${ENVIRONMENT_DEVOPS}/codebuild/github_ssh_private_key'

phases:
  install:
    commands:
      - wget $TERRAFORM_DOWNLOAD_URL
      - unzip -o terraform_1.5.0_linux_amd64.zip
      - mv terraform /bin
      - rm terraform_1.5.0_linux_amd64.zip

      # Adding ssh key to codebuild to enable git::ssh access
      - eval `ssh-agent`
      - echo "${SSH_KEY}" | ssh-add -

  build:
    commands:
      
      - cd terraformScripts
      - echo "a:${SITE}"
      - echo "b:${ENVIRONMENT_DEVOPS}"
      - |
        sed -i "s/\${bucket_backend}/${bucket_backend}/" ${TF_VAR_environment}_backend.conf
        cat ${TF_VAR_environment}_backend.conf

        sed -i "s/\${region}/${AWS_REGION}/" ${TF_VAR_environment}_backend.conf
            cat ${TF_VAR_environment}_backend.conf

      - terraform init -backend-config=${TF_VAR_environment}_backend.conf
      - terraform workspace select $TF_VAR_environment || terraform workspace new $TF_VAR_environment
      - echo "TF_ACTION = ${TF_ACTION}"

      # send terraform plan file to s3 bucket/terraform_plan bucket for display
      - |
        if [ $TF_ACTION = "plan" ] || [ $TF_ACTION = "deploy" ]; then
          terraform plan -out="$TF_VAR_environment.tfplan" -var-file="${TF_VAR_environment}.tfvars"
          if [ $? != 0 ] ; then exit 1; fi
          ls -al
          echo "Plan_stage is executed!"
        fi
      - |
        if [ $TF_ACTION = "provision" ] || [ $TF_ACTION = "deploy" ] ; then
          terraform apply -var-file="${TF_VAR_environment}.tfvars" -auto-approve
          if [ $? != 0 ] ; then exit 1; fi
          echo "Provision stage is executed!"
        fi
    finally:
      # take tfstate files of the current workspace and write them back to s3 for the next time this runs
      #- aws s3 sync . $S3_FOR_TERRAFORM_STATE --exclude "*" --include "*/$TERRAFORM_WORKSPACE/*.tfstate*" --include "*.terraform/*" --only-show-errors
  post_build:
    commands:
      - echo "Build executed successfully. "