{
    "link_type": "dedupe_only",
    "comparisons": [
        {
            "output_column_name": "firstname",
            "comparison_levels": [
                {
                    "sql_condition": "`firstname_l` IS NULL OR `firstname_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`firstname_l` = `firstname_r`",
                    "label_for_charts": "Exact match firstname",
                    "m_probability": 0.9795454545454545,
                    "u_probability": 0.0018044928367766152
                },
                {
                    "sql_condition": "damerau_levenshtein(`firstname_l`, `firstname_r`) <= 1",
                    "label_for_charts": "Damerau_levenshtein <= 1",
                    "m_probability": 0.005454545454545455,
                    "u_probability": 0.0011836509445118453
                },
                {
                    "sql_condition": "jaro_winkler(`firstname_l`, `firstname_r`) >= 0.9",
                    "label_for_charts": "Jaro_winkler >= 0.9",
                    "m_probability": 0.005454545454545455,
                    "u_probability": 0.000854068211581165
                },
                {
                    "sql_condition": "jaro_winkler(`firstname_l`, `firstname_r`) >= 0.8",
                    "label_for_charts": "Jaro_winkler >= 0.8",
                    "m_probability": 0.0009090909090909091,
                    "u_probability": 0.0049470258716970555
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.008636363636363636,
                    "u_probability": 0.9912107621354334
                }
            ],
            "comparison_description": "Exact match vs. Firstname within levenshtein threshold 1 vs. Firstname within damerau-levenshtein threshold 1 vs. Firstname within jaro_winkler thresholds 0.9, 0.8 vs. anything else"
        },
        {
            "output_column_name": "lastname",
            "comparison_levels": [
                {
                    "sql_condition": "`lastname_l` IS NULL OR `lastname_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`lastname_l` = `lastname_r`",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.9731818181818181,
                    "u_probability": 0.0005803284001769454
                },
                {
                    "sql_condition": "levenshtein(`lastname_l`, `lastname_r`) <= 2",
                    "label_for_charts": "Levenshtein <= 2",
                    "m_probability": 0.0022727272727272726,
                    "u_probability": 0.0034513115421843997
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.024545454545454544,
                    "u_probability": 0.9959683600576387
                }
            ],
            "comparison_description": "Exact match vs. Lastname within levenshtein threshold 2 vs. anything else"
        },
        {
            "output_column_name": "postalcode",
            "comparison_levels": [
                {
                    "sql_condition": "`postalcode_l` IS NULL OR `postalcode_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`postalcode_l` = `postalcode_r`",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.7290909090909091,
                    "u_probability": 0.028620091315134287,
                    "tf_adjustment_column": "postalcode",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.27090909090909093,
                    "u_probability": 0.9713799086848657
                }
            ],
            "comparison_description": "Exact match vs. anything else"
        },
        {
            "output_column_name": "email",
            "comparison_levels": [
                {
                    "sql_condition": "`email_l` IS NULL OR `email_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`email_l` = `email_r`",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.5655737704918032,
                    "u_probability": 9.382988106392361e-06
                },
                {
                    "sql_condition": "levenshtein(`email_l`, `email_r`) <= 2",
                    "label_for_charts": "Levenshtein <= 2",
                    "m_probability": 0.012295081967213115,
                    "u_probability": 2.680853744683532e-06
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.42213114754098363,
                    "u_probability": 0.999987936158149
                }
            ],
            "comparison_description": "Exact match vs. Email within levenshtein threshold 2 vs. anything else"
        },
        {
            "output_column_name": "directphone",
            "comparison_levels": [
                {
                    "sql_condition": "`directphone_l` IS NULL OR `directphone_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`directphone_l` = `directphone_r`",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8043025676613463,
                    "u_probability": 8.327434733730275e-05
                },
                {
                    "sql_condition": "levenshtein(`directphone_l`, `directphone_r`) <= 2",
                    "label_for_charts": "Levenshtein <= 2",
                    "m_probability": 0.006245662734212352,
                    "u_probability": 0.00029608656831040973
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.18945176960444135,
                    "u_probability": 0.9996206390843523
                }
            ],
            "comparison_description": "Exact match vs. Directphone within levenshtein threshold 2 vs. anything else"
        },
        {
            "output_column_name": "address",
            "comparison_levels": [
                {
                    "sql_condition": "`address_l` IS NULL OR `address_r` IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "`address_l` = `address_r`",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.48409090909090907,
                    "u_probability": 0.0017812357183462821
                },
                {
                    "sql_condition": "levenshtein(`address_l`, `address_r`) <= 2",
                    "label_for_charts": "Levenshtein <= 2",
                    "m_probability": 0.017727272727272727,
                    "u_probability": 0.00023185045645558614
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.49818181818181817,
                    "u_probability": 0.9979869138251981
                }
            ],
            "comparison_description": "Exact match vs. Address within levenshtein threshold 2 vs. anything else"
        }
    ],
    "blocking_rules_to_generate_predictions": [
        "substr(l.firstname,1,1) = substr(r.firstname,1,1) and l.lastname = r.lastname",
        "substr(l.firstname,1,1) = substr(r.firstname,1,1) and l.postalcode = r.postalcode",
        "l.streetname = r.streetname and l.streetnumber = r.streetnumber and substr(l.firstname,1,1) = substr(r.firstname,1,1)"
    ],
    "retain_matching_columns": true,
    "retain_intermediate_calculation_columns": true,
    "sql_dialect": "spark",
    "linker_uid": "ogyv08re",
    "probability_two_random_records_match": 3.4521363781480854e-05
}